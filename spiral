class Solution {
    public List<List<int>> generateMatrix(int A) {
        
        List<List<int>> matrix = new List<List<int>>();

        for(int i=0; i<A; i++)
        {
            matrix.Add(new List<int>());
            for(int j=0; j<A; j++)
            {
                matrix[i].Add(0);
            }
        }


        int rows, cols;
        rows=cols=A;
        int row,col,dir, layer;
        row=col=dir=layer=0;
        matrix[0][0]=1;
        
        for(int rc=2; rc<= A*A; rc++)
        {
            switch(dir)
            {
                case 0:
                    if(col == cols-layer-1)
                    {
                        row++;
                        dir=1;
                    }
                    else {
                        col++;
                    }
                break;
                case 1:
                    if(row== rows-layer-1)
                    {
                        col--;
                        dir =2;
                    }
                    else {
                        row++;
                    }
                break;
                case 2:
                    if(col==layer)
                    {
                        row--;
                        dir=3;
                    }
                    else {
                        col--;
                    }
                break;
                case 3:
                    if(row== layer+1)
                    {
                        dir=0;
                        col++;
                        layer++;
                    }
                    else
                    {
                        row--;
                    }
                break;

            }
                matrix[row][col] = rc;
        }
        return matrix;

    }
}
